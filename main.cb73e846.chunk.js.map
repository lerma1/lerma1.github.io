{"version":3,"sources":["tree.js","table.js","Components/Insert-form.js","Components/History.js","Components/ChoiceTable.js","immutable-tree.js","Components/App.js","index.js","examples-table.js"],"names":["Node","data","value","color","VerticalSpan","this","children","Tree","node","_root","prototype","traverse","callback","recurse","currentNode","i","length","getParent","tree","parent","undefined","find","item","alert","getDepth","depth","getMaxDepth","maxDepth","getMaxValue","maxValue","getParentsIndex","arrIndex","currentValue","unshift","findIndex","element","findNode","currentTree","foundNode","getNumbersRow","arrRows","push","hasRow","row","current","getLowerCells","Rows","lowerRow","lowerCells","isParentOfChild","child","getColSpan","arrayOfDepth","countDepthChildren","MyTable","props","state","tdElements","arreyOfDepth","sortOfDepth","sizeElement","widthWindow","tr","key","Date","map","rowSpan","colSpan","style","className","Component","MyForm","isCheckedRow","isCheckedCol","onClickRadio","bind","event","target","setState","htmlFor","type","id","placeholder","defaultValue","onKeyUp","input","document","getElementById","console","log","replace","name","checked","onClick","Button","variant","onClickInsert","History","history","currentIndex","unDoButtonEnabled","onClickUnDo","unDoButtonDisabled","disabled","reDoButtonEnabled","onClickReDo","reDoButtonDisabled","historyList","index","text","enableUnDo","enableReDo","ChoiceTable","indexCheckedTable","onClickChoiceTable","onChoiceTable","add–°olumn","targetValue","indexesParents","currentCell","cellForInsert","cell","path","currentPath","update","addCellWithShiftRight","addCellWithShiftDown","pop","incrementVerticalSpan","$apply","x","Number","App","isInteger","getElementsByName","newTree","targetRow","cellsToChange","k","newCell","addRow","newHistory","slice","tree1","tree2","height","window","innerWidth","JSON","parse","ReactDOM","render"],"mappings":"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","file":"static/js/main.cb73e846.chunk.js","sourcesContent":["export function Node(data = {value: 0, color: \"white\", VerticalSpan: 1}) {\r\n    this.value = data.value;\r\n    this.color = data.color;\r\n    this.VerticalSpan = data.VerticalSpan;\r\n    this.children = [];\r\n}\r\n\r\nexport function Tree(data = {value: 0, color: \"white\", VerticalSpan: 1} ) {\r\n    var node = new Node(data);\r\n    this._root = node;\r\n}\r\n\r\nTree.prototype.traverse = function (callback) {\r\n    (function recurse(currentNode) {\r\n        for (var i = 0, length = currentNode.children.length; i < length; i++) {\r\n            recurse(currentNode.children[i]);\r\n        }\r\n        callback(currentNode);\r\n    })(this._root);\r\n};\r\n\r\n\r\nexport const getParent = (node, tree) => {\r\n    let parent = undefined;\r\n    if (!node) {\r\n        alert(\"!\");\r\n        return 0;\r\n    }\r\n    tree.traverse((currentNode) => {\r\n        let isParent = currentNode.children.find((item) => {\r\n            return item == node;\r\n        });\r\n        if (isParent != undefined) parent = currentNode;\r\n    });\r\n    return parent;\r\n}\r\n\r\nexport const getDepth = (node, tree) => {\r\n    let depth = 0;\r\n    let currentNode = node;\r\n    if (!node) {\r\n        alert(\"!\");\r\n        return 0;\r\n    }\r\n\r\n    while (currentNode != undefined) {\r\n        currentNode = getParent(currentNode, tree);\r\n        if (currentNode) depth += currentNode.VerticalSpan;\r\n    }\r\n\r\n    return depth;\r\n}\r\n\r\nexport const sortOfDepth = (tree) => {\r\n    let arreyOfDepth = [];\r\n    tree.traverse((node) => {\r\n        let depth = getDepth(node, tree);\r\n        if (!arreyOfDepth[depth]) arreyOfDepth[depth] = [];\r\n        arreyOfDepth[depth].push(node);\r\n\r\n    });\r\n    return arreyOfDepth;\r\n}\r\n\r\nexport const getMaxDepth = (tree) => {\r\n    let maxDepth = 0;\r\n    tree.traverse((node) => {\r\n        if (getDepth(node, tree) > maxDepth) {\r\n            maxDepth = getDepth(node, tree);\r\n        }\r\n    });\r\n    return maxDepth;\r\n};\r\n\r\nexport const getMaxValue = (tree) => {\r\n    let maxValue = 0;\r\n    tree.traverse((node) => {\r\n        if (node.value > maxValue) {\r\n            maxValue = node.value;\r\n        }\r\n    });\r\n    return maxValue;\r\n};\r\n\r\n\r\nTree.prototype.getParentsIndex = function (node) {\r\n    let arrIndex = [];\r\n    let currentValue = node.value;\r\n\r\n    let currentNode = getParent(node, this);\r\n\r\n    while (currentNode != undefined) {\r\n        arrIndex.unshift(currentNode.children.findIndex((element) => element.value == currentValue));\r\n        currentValue = currentNode.value;\r\n        currentNode = getParent(currentNode, this);\r\n\r\n    }\r\n    return arrIndex;\r\n};\r\n\r\nexport const findNode = (value, currentTree) => {\r\n    let foundNode = null;\r\n    currentTree.traverse((node) => {\r\n        if (node.value === value) {\r\n            foundNode = node;\r\n        }\r\n    });\r\n    return (foundNode === null) ? -1 : foundNode;\r\n};\r\n\r\nTree.prototype.getNumbersRow = function (node) {\r\n    let arrRows = [];\r\n    arrRows[0] = getDepth(node, this);\r\n    for (let i = 1; i < node.VerticalSpan; i++) {\r\n        arrRows.push(i + arrRows[0]);\r\n    }\r\n    return arrRows;\r\n}\r\n\r\nTree.prototype.hasRow = function (row, node) {\r\n    let arrRows = this.getNumbersRow(node);\r\n\r\n    return (arrRows.findIndex((current) => current == row)) != -1;\r\n}\r\n\r\nTree.prototype.getLowerCells = function () {\r\n\r\n    let current = this._root.children[0];\r\n    while (current.children.length != 0) {\r\n        current = current.children[0];\r\n    }\r\n    let Rows = this.getNumbersRow(current);\r\n    let lowerRow = Rows[Rows.length - 1];//–Ω–∞—à–ª–∏ —Å–∞–º—ã–π –Ω–∏–∂–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å\r\n\r\n    let lowerCells = [];\r\n\r\n    this.traverse((node) => {\r\n        if (this.hasRow(lowerRow, node)) lowerCells.push(node);\r\n    })\r\n    return lowerCells;\r\n\r\n}\r\n\r\n\r\nTree.prototype.isParentOfChild = function (parent, child) {\r\n    let currentNode = child;\r\n    while (getParent(currentNode, this) != undefined) {\r\n        if (getParent(currentNode, this) == parent) return true;\r\n        currentNode = getParent(currentNode, this);\r\n    }\r\n    return false;\r\n}\r\n\r\nTree.prototype.getColSpan = function (node, arrayOfDepth) {\r\n    let countDepthChildren = 0;\r\n    let lowerCells = this.getLowerCells();\r\n\r\n    for (let i = 0; i < lowerCells.length; i++) {\r\n        if (this.isParentOfChild(node, lowerCells[i])) {\r\n            countDepthChildren++;\r\n        }\r\n    }\r\n    return countDepthChildren;\r\n}","import React, {Component} from 'react';\r\nimport {sortOfDepth} from \"./tree\";\r\nimport './style.css'\r\n\r\n\r\nclass MyTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tree: this.props.tree,\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const tdElements = [];\r\n\r\n        const arrayOfDepth = sortOfDepth(this.state.tree);\r\n\r\n        let sizeElement = (this.props.widthWindow)/arrayOfDepth.length;\r\n        sizeElement= (sizeElement>150)? 150 : sizeElement;\r\n\r\n        for (let i = 1; i < arrayOfDepth.length; i++) {\r\n\r\n            let tr = <tr key={'tr' + i + new Date()}>\r\n                {arrayOfDepth[i].map((currentNode) => <td key={currentNode.value}\r\n                                                          rowSpan={currentNode.VerticalSpan}\r\n                                                          colSpan={this.state.tree.getColSpan(currentNode)}\r\n                                                          style={{\r\n                                                              \"background-color\": currentNode.color,\r\n                                                              \"width\": ((currentNode.children.length || 1) * sizeElement) + \"px\",\r\n                                                              \"height\": (currentNode.VerticalSpan * (sizeElement/2)) + \"px\"\r\n                                                          }}\r\n                >\r\n                    {currentNode.value}\r\n                </td>)}\r\n            </tr>;\r\n\r\n            tdElements.push(tr);\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <table className=\"table-tree h4\">\r\n                    {tdElements}\r\n                </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyTable","import React, {Component} from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport '../style.css'\r\n\r\n\r\nclass MyForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isCheckedRow: this.props.isCheckedRow,\r\n            isCheckedCol: this.props.isCheckedCol,\r\n        }\r\n        this.onClickRadio = this.onClickRadio.bind(this);\r\n\r\n    }\r\n\r\n    onClickRadio(event) {\r\n        let radioChecked = event.target.value;\r\n        if (radioChecked == \"option1\") {\r\n            this.setState({isCheckedCol: false, isCheckedRow: true});\r\n\r\n        } else {\r\n            this.setState({isCheckedCol: true, isCheckedRow: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const onKeyUpHandler = () => {\r\n            let input = document.getElementById(\"input\");\r\n            console.log(input.value);\r\n            input.value = input.value.replace('[^0-9]', \"\");\r\n            //—Ç—É—Ç –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–∞–∫–∞—è-—Ç–æ –¥—Ä—É–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞\r\n\r\n        }\r\n\r\n\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"container card p-0\">\r\n\r\n\r\n                <h5 className=\"card-header\">–í—Å—Ç–∞–≤–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤/—Å—Ç—Ä–æ–∫</h5>\r\n                <div className=\"card-body pt-0\">\r\n\r\n                    <div className=\"form-group d-inline-block\">\r\n                        <label htmlFor=\"input\">–ù–æ–º–µ—Ä —è—á–µ–π–∫–∏</label>\r\n                        <input type=\"text\" className=\"form-control input-number\" id=\"input\" placeholder=\"7\"\r\n                               defaultValue=\"7\" onKeyUp={onKeyUpHandler}></input>\r\n                    </div>\r\n\r\n                    <div className=\"d-inline-block m-4\">\r\n                        <div className=\"form-check\">\r\n                            <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" value=\"option1\" checked={this.state.isCheckedRow} onClick={this.onClickRadio}></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\r\n                                –°—Ç—Ä–æ–∫—É\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-check  mb-3\">\r\n                            <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" value=\"option2\" checked={this.state.isCheckedCol} onClick={this.onClickRadio}></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\r\n                                –°—Ç–æ–ª–±–µ—Ü\r\n                            </label>\r\n                        </div>\r\n\r\n                        <Button variant=\"success\" className=\"\" onClick={this.props.onClickInsert}>–í—Å—Ç–∞–≤–∏—Ç—å</Button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyForm","import React, {Component} from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport '../style.css'\r\n\r\n\r\nclass History extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            history: this.props.history,\r\n            currentIndex: this.props.history.currentIndex,\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let unDoButtonEnabled = <Button className=\"m-2 d-inline-flex btn-success\"\r\n                                        onClick={this.props.onClickUnDo}>–û—Ç–º–µ–Ω–∏—Ç—å</Button>;\r\n        let unDoButtonDisabled = <Button className=\"m-2 d-inline-flex btn-secondary\" disabled>–û—Ç–º–µ–Ω–∏—Ç—å</Button>;\r\n        let reDoButtonEnabled = <Button className=\"m-2 d-inline-flex btn-success\"\r\n                                        onClick={this.props.onClickReDo}>–í–µ—Ä–Ω—É—Ç—å</Button>;\r\n        let reDoButtonDisabled = <Button className=\"m-2 d-inline-flex btn-secondary\" disabled>–í—Å—Ç–∞–≤–∏—Ç—å</Button>;\r\n\r\n\r\n        const historyList = this.state.history.data.map((item, index) =>\r\n            (this.state.history.currentIndex == index) ?\r\n                <li key={index} className=\"font-weight-bold\"> {item.text} </li> :\r\n                <li key={index} className=\"\"> {item.text} </li>\r\n        );\r\n\r\n        return (\r\n            <div className=\"container card p-0\">\r\n                <h5 className=\"card-header\">–ò—Å—Ç–æ—Ä–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã</h5>\r\n                <div className=\"border history-list m-3\">\r\n                    <ul id=\"history-list\">\r\n                        {historyList}\r\n                    </ul>\r\n\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    {(this.props.enableUnDo) ? unDoButtonEnabled : unDoButtonDisabled}\r\n                    {(this.props.enableReDo) ? reDoButtonEnabled : reDoButtonDisabled}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default History;\r\n","import React, {Component} from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport '../style.css'\r\n\r\n\r\nclass ChoiceTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            indexCheckedTable: this.props.indexCheckedTable,\r\n        }\r\n        this.onClickChoiceTable = this.onClickChoiceTable.bind(this);\r\n    }\r\n\r\n    onClickChoiceTable(event) {\r\n        let radioChecked = event.target.value;\r\n        if (radioChecked == \"option1\") {\r\n            this.setState({indexCheckedTable: 0});\r\n\r\n        } else {\r\n            this.setState({indexCheckedTable: 1});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"container  card p-0\">\r\n\r\n\r\n                <h5 className=\"card-header\">–í—ã–±–æ—Ä —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤</h5>\r\n                <div className=\"card-body\">\r\n                    <div className=\"form-check m-1 ml-3 \">\r\n                        <input className=\"form-check-input \" type=\"radio\" name=\"choice-table\" id=\"exampleRadios1\"\r\n                               value=\"option1\" checked={this.state.indexCheckedTable == 0}\r\n                               onClick={this.onClickChoiceTable}></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">–¢–∞–±–ª–∏—Ü–∞ ‚Ññ1</label>\r\n                    </div>\r\n\r\n                    <div className=\"form-check m-1 ml-3 mb-3\">\r\n                        <input className=\"form-check-input \" type=\"radio\" name=\"choice-table\" id=\"exampleRadios2\"\r\n                               value=\"option2\" checked={this.state.indexCheckedTable == 1}\r\n                               onClick={this.onClickChoiceTable}></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">–¢–∞–±–ª–∏—Ü–∞ ‚Ññ2</label>\r\n                    </div>\r\n\r\n                    <Button variant=\"success\" className=\"btn btn-success\"\r\n                            onClick={this.props.onChoiceTable}>–í—ã–±—Ä–∞—Ç—å</Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChoiceTable","import {\r\n    Node,\r\n    getMaxDepth,\r\n    getMaxValue,\r\n    findNode,\r\n    getParent,\r\n    getDepth,\r\n} from \"./tree\";\r\nimport update from 'react-addons-update';\r\n\r\n\r\n/**\r\n * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü –≤ —è—á–µ–π–∫—É c  –Ω–æ–º–µ—Ä–æ–º target\r\n *\r\n * @param {value} value - —è—á–µ–π–∫–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å —Å—Ç–æ–ª–±–µ—Ü\r\n * @param {tree} tree –¥–µ—Ä–µ–≤–æ, –∫—É–¥–∞ –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å\r\n * @return {tree} newTree, –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º —Å—Ç–æ–ª–±—Ü–æ–º\r\n */\r\n;\r\n\r\nexport function add–°olumn(targetValue, tree) {\r\n\r\n    let maxValue = getMaxValue(tree);\r\n    let target = findNode(targetValue, tree);\r\n    let indexesParents = tree.getParentsIndex(target);\r\n    let currentCell = target;\r\n\r\n    for (let i = indexesParents.length - 1; i > -1; i--) {\r\n        if (indexesParents[i] != 0) break;\r\n        currentCell = getParent(currentCell, tree);\r\n    }\r\n    let cellForInsert = currentCell;\r\n\r\n    let node = new Node({value: ++maxValue, color: \"Green\", VerticalSpan: 1});\r\n    let currentNode = node;\r\n    for (let i = getDepth(cellForInsert, tree); i < getMaxDepth(tree); i++) {\r\n        currentNode.children.push(new Node({value: ++maxValue, color: \"Green\", VerticalSpan: 1}));\r\n        currentNode = currentNode.children[0];\r\n    }\r\n\r\n    let newTree = addCellWithShiftRight(node, cellForInsert, tree);\r\n    return newTree;\r\n}\r\n\r\n\r\n/**\r\n * –î–æ–±–∞–≤–ª—è–µ—Ç —è—á–µ–π–∫—É cell –≤ —è—á–µ–π–∫—É target\r\n *\r\n * @param {cell}\r\n * @param {target}\r\n * @return {tree}  –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π —è—á–µ–π–∫–æ–π\r\n */\r\nexport function addCellWithShiftRight(cell, target, tree) {\r\n\r\n    let path = {_root: {children: {}}};\r\n    let currentPath = path._root.children;\r\n\r\n    let indexesParents = tree.getParentsIndex(target);\r\n\r\n    for (let i = 0; i < indexesParents.length - 1; i++) {\r\n        currentPath[indexesParents[i]] = {children: {}};\r\n        currentPath = currentPath[indexesParents[i]].children;\r\n    }\r\n\r\n    currentPath['$splice'] = [[indexesParents[indexesParents.length - 1], 0, cell]];\r\n\r\n    return update(tree, path);\r\n}\r\n\r\nexport function addCellWithShiftDown(cell, target, tree) {\r\n\r\n    let path = {_root: {children: {}}};\r\n    let currentPath = path._root.children;\r\n\r\n    let indexesParents = tree.getParentsIndex(target);\r\n\r\n    for (let i = 0; i < indexesParents.length - 1; i++) {\r\n        currentPath[indexesParents[i]] = {children: {}};\r\n        currentPath = currentPath[indexesParents[i]].children;\r\n    }\r\n\r\n    currentPath['$splice'] = [[indexesParents.pop(), 1, cell]];\r\n\r\n    return update(tree, path);\r\n}\r\n\r\n/**\r\n * –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –Ω–∞ 1 VerticalSpan —è—á–µ–π–∫–∏ target\r\n *\r\n * @param {target}\r\n * @return {tree}  –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π —è—á–µ–π–∫–æ–π\r\n */\r\nexport function incrementVerticalSpan(target, tree) {\r\n    let path = {_root: {children: {}}};\r\n    let currentPath = path._root.children;\r\n\r\n    let indexesParents = tree.getParentsIndex(target);\r\n\r\n    for (let i = 0; i < indexesParents.length - 1; i++) {\r\n        currentPath[indexesParents[i]] = {children: {}};\r\n        currentPath = currentPath[indexesParents[i]].children;\r\n    }\r\n    currentPath[indexesParents.pop()] = {\r\n        VerticalSpan: {\r\n            $apply: function (x) {\r\n                return Number(x + 1);\r\n            }\r\n        }\r\n    };\r\n    return update(tree, path);\r\n}\r\n\r\n/**\r\n * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –≤ —è—á–µ–π–∫—É target\r\n *\r\n * @param {target}\r\n * @return {tree}  –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π —è—á–µ–π–∫–æ–π\r\n */\r\nexport function addRow(targetValue, tree) {\r\n    let newTree = update(tree, {});\r\n    let maxValue = getMaxValue(tree);\r\n    let targetRow = getDepth(findNode(targetValue, tree), tree) - 1;\r\n    let cellsToChange = [];\r\n    tree.traverse((node) => {\r\n        if (tree.hasRow(targetRow, node)) {\r\n            cellsToChange.push(node);\r\n        }\r\n    });\r\n\r\n    for (let i = 0; i < cellsToChange.length; i++) {\r\n\r\n        if (cellsToChange[i].children.length == 0 || tree.hasRow(targetRow + 1, cellsToChange[i])) {\r\n\r\n            newTree = incrementVerticalSpan(cellsToChange[i], newTree);\r\n\r\n        } else {\r\n\r\n\r\n            for (let k = 0; k < cellsToChange[i].children.length; k++) {\r\n                let newCell = new Node({VerticalSpan: 1, color: \"Yellow\", value: ++maxValue});\r\n                newCell.children = [cellsToChange[i].children[k]];\r\n\r\n                newTree = addCellWithShiftDown(newCell, cellsToChange[i].children[k], newTree);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return newTree;\r\n\r\n\r\n}","import React, {Component} from 'react';\nimport MyTable from \"../table\";\nimport MyForm from \"./Insert-form\"\nimport History from \"./History\";\nimport ChoiceTable from \"./ChoiceTable\";\nimport {add–°olumn, addRow} from \"../immutable-tree\";\nimport {getMaxValue} from \"../tree\";\nimport {tree1, tree2} from \"../index\";\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.onClickInsert = this.onClickInsert.bind(this);\n        this.onChoiceTable = this.onChoiceTable.bind(this);\n        this.onClickUnDo = this.onClickUnDo.bind(this);\n        this.onClickReDo = this.onClickReDo.bind(this);\n\n        this.state = {\n            tree: this.props.history.data[0].tree,\n            history: this.props.history,\n            enableUnDo: false,\n            enableReDo: false,\n            isCheckedRow: true,\n            isCheckedCol: false,\n            indexCheckedTable: 1,\n            widthWindow: 100,\n        }\n    }\n\n\n\n\n\n    onClickInsert() {\n        let value = Number(document.getElementById(\"input\").value);\n        if (!Number.isInteger(value)) {\n            alert(\"–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ - –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ!\");\n            return;\n        }\n\n        if (value > getMaxValue(this.state.tree)) {\n            alert(\"–≠–ª–µ–º–µ–Ω—Ç —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω!\");\n            return;\n        }\n\n        let radio = document.getElementsByName(\"exampleRadios\");\n\n        if (radio[0].checked) {\n            let newTree = addRow(value, this.state.tree);\n            let newHistory = {currentIndex: this.state.history.currentIndex + 1, data: this.state.history.data.slice()};\n\n            if (newHistory.currentIndex != newHistory.data.length - 1) newHistory.data.slice(0, newHistory.currentIndex);\n            newHistory.data.push({text: `–í—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –≤ —è—á–µ–π–∫—É ‚Ññ ${value}`, tree: newTree});\n\n            this.setState({tree: newTree, isCheckedRow: true, isCheckedCol: false, history: newHistory});\n\n        } else {\n            let newTree = add–°olumn(value, this.state.tree);\n            let newHistory = {currentIndex: this.state.history.currentIndex + 1, data: this.state.history.data.slice()};\n\n            if (newHistory.currentIndex != newHistory.data.length - 1) newHistory.data.slice(0, newHistory.currentIndex);\n            newHistory.data.push({text: `–í—Å—Ç–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü –≤ —è—á–µ–π–∫—É ‚Ññ ${value}`, tree: newTree});\n\n            this.setState({tree: newTree, isCheckedRow: false, isCheckedCol: true, history: newHistory});\n\n        }\n    }\n\n    onChoiceTable() {\n        let radio = document.getElementsByName(\"choice-table\");\n\n        if (radio[0].checked) {\n            let newTree = tree1;\n            let newHistory = {currentIndex: this.state.history.currentIndex + 1, data: this.state.history.data.slice()};\n            newHistory.data.push({text: `–°–æ–∑–¥–∞–Ω–∞ –¢–∞–±–ª–∏—Ü–∞ ‚Ññ1`, tree: newTree});\n\n            this.setState({tree: newTree, history: newHistory, indexCheckedTable: 0});\n\n        } else {\n            let newTree = tree2;\n            let newHistory = {currentIndex: this.state.history.currentIndex + 1, data: this.state.history.data.slice()};\n            newHistory.data.push({text: `–°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ ‚Ññ2`, tree: newTree});\n\n            this.setState({history: newHistory, tree: newTree, indexCheckedTable: 1});\n        }\n    }\n\n    onClickUnDo() {\n\n        let newHistory = {currentIndex: this.state.history.currentIndex - 1, data: this.state.history.data.slice()};\n        this.setState({tree: newHistory.data[this.state.history.currentIndex - 1], history: newHistory});\n        console.log(\"height\", this.state.height);\n    }\n\n    onClickReDo() {\n        if (this.state.history.currentIndex + 1 >= this.state.history.data.length) return;\n        let newHistory = {currentIndex: this.state.history.currentIndex + 1, data: this.state.history.data.slice()};\n        this.setState({tree: newHistory.data[this.state.history.currentIndex + 1], history: newHistory});\n\n    }\n    componentWillMount(){\n        this.setState({widthWindow: window.innerWidth});\n    }\n\n    render() {\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"App\">\n                    <h1>–í—Å—Ç–∞–≤–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤/—Å—Ç—Ä–æ–∫</h1>\n                    <p><span className=\"h6\">–ó–∞–¥–∞–Ω–∏–µ:   </span>–î–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–º–∞ –≤ –≤–∏–¥–µ\n                        ¬´–¥–µ—Ä–µ–≤–∞¬ª. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—Å—Ç–∞–≤–∫—É —Å—Ç—Ä–æ–∫ –∏ –∫–æ–ª–æ–Ω–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏.</p>\n                </div>\n                <MyTable tree={this.state.history.data[this.state.history.currentIndex].tree}\n                         key={this.state.history.currentIndex}\n                         widthWindow = {this.state.widthWindow}\n                />\n                <div className=\"card-deck\">\n                    <div className=\"card border-0\">\n                        <ChoiceTable style={{\"width\": \"100px\"}} onChoiceTable={this.onChoiceTable}\n                                     indexCheckedTable={this.state.indexCheckedTable}/>\n                        <MyForm onClickInsert={this.onClickInsert} isCheckedRow={this.state.isCheckedRow}\n                                isCheckedCol={this.state.isCheckedCol}/>\n                    </div>\n                    <History history={this.state.history}\n                             key={this.state.history.currentIndex}\n                             enableUnDo={this.state.history.currentIndex > 0}\n                             enableReDo={(this.state.history.currentIndex + 1) < this.state.history.data.length}\n                             onClickUnDo={this.onClickUnDo}\n                             onClickReDo={this.onClickReDo}\n\n                    />\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport {Tree} from \"./tree\";\nimport {jsonTree1, jsonTree2} from \"./examples-table\";\n\n\nexport var tree1 = new Tree();\ntree1._root = JSON.parse(jsonTree1)._root;\nexport var tree2 = new Tree();\ntree2._root = JSON.parse(jsonTree2)._root;\n\n\nlet history = {currentIndex: 0, data: [{text: \"–°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ ‚Ññ2\", tree: tree2}]};\nReactDOM.render(<App history={history}/>, document.getElementById('root'));\n\n\n","export let jsonTree1 = '{\"_root\":{\"value\":0,\"color\":\"White\",\"VerticalSpan\":1,\"children\":[{\"value\":1,\"color\":\"Coral\",\"VerticalSpan\":1,\"children\":[{\"value\":6,\"color\":\"LightGreen\",\"VerticalSpan\":1,\"children\":[{\"value\":11,\"color\":\"MediumPurple\",\"VerticalSpan\":1,\"children\":[{\"value\":16,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]}]}]}]},{\"value\":2,\"color\":\"Coral\",\"VerticalSpan\":1,\"children\":[{\"value\":7,\"color\":\"LightGreen\",\"VerticalSpan\":1,\"children\":[{\"value\":12,\"color\":\"MediumPurple\",\"VerticalSpan\":1,\"children\":[{\"value\":17,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]}]}]}]},{\"value\":3,\"color\":\"Coral\",\"VerticalSpan\":1,\"children\":[{\"value\":8,\"color\":\"LightGreen\",\"VerticalSpan\":1,\"children\":[{\"value\":13,\"color\":\"MediumPurple\",\"VerticalSpan\":1,\"children\":[{\"value\":18,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]}]}]}]},{\"value\":4,\"color\":\"Coral\",\"VerticalSpan\":1,\"children\":[{\"value\":9,\"color\":\"LightGreen\",\"VerticalSpan\":1,\"children\":[{\"value\":14,\"color\":\"MediumPurple\",\"VerticalSpan\":1,\"children\":[{\"value\":19,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]}]}]}]},{\"value\":5,\"color\":\"Coral\",\"VerticalSpan\":1,\"children\":[{\"value\":10,\"color\":\"LightGreen\",\"VerticalSpan\":1,\"children\":[{\"value\":15,\"color\":\"MediumPurple\",\"VerticalSpan\":1,\"children\":[{\"value\":20,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]}]}]}]}]}}';\r\nexport let jsonTree2 = '{\"_root\":{\"value\":0,\"color\":\"White\",\"VerticalSpan\":1,\"children\":[{\"value\":1,\"color\":\"Coral\",\"VerticalSpan\":2,\"children\":[{\"value\":8,\"color\":\"MediumPurple\",\"VerticalSpan\":1,\"children\":[{\"value\":12,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]}]}]},{\"value\":2,\"color\":\"Coral\",\"VerticalSpan\":1,\"children\":[{\"value\":5,\"color\":\"LightGreen\",\"VerticalSpan\":1,\"children\":[{\"value\":9,\"color\":\"MediumPurple\",\"VerticalSpan\":1,\"children\":[{\"value\":13,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]}]},{\"value\":10,\"color\":\"MediumPurple\",\"VerticalSpan\":1,\"children\":[{\"value\":14,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]}]}]},{\"value\":6,\"color\":\"LightGreen\",\"VerticalSpan\":1,\"children\":[{\"value\":11,\"color\":\"MediumPurple\",\"VerticalSpan\":2,\"children\":[]}]}]},{\"value\":3,\"color\":\"Coral\",\"VerticalSpan\":1,\"children\":[{\"value\":7,\"color\":\"LightGreen\",\"VerticalSpan\":2,\"children\":[{\"value\":15,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]},{\"value\":16,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]}]}]},{\"value\":4,\"color\":\"Coral\",\"VerticalSpan\":3,\"children\":[{\"value\":17,\"color\":\"CornflowerBlue\",\"VerticalSpan\":1,\"children\":[]}]}]}}';"],"sourceRoot":""}